package com.chegy.model;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Depart generated by hbm2java
 */
@Entity
@Table(name = "depart", catalog = "rbac")
public class Depart implements java.io.Serializable {

	private Integer id;
	private Depart depart;
	private String oname;
	private Integer status;
	private String description;
	
	private Set<Depart> children = new HashSet<Depart>(0);
	private Set<Position> positions = new HashSet<Position>(0);

	private Set<User> users;
	
	private String checkArr = "0";
	public Depart() {
	}

	public Depart(String oname) {
		this.oname = oname;
	}

	

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pid")
	public Depart getDepart() {
		return this.depart;
	}

	public void setDepart(Depart depart) {
		this.depart = depart;
	}

	@Column(name = "oname", nullable = false, length = 10)
	public String getOname() {
		return this.oname;
	}

	public void setOname(String oname) {
		this.oname = oname;
	}

	@Column(name = "status")
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}
	
	@Column(name = "description", length = 200)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(cascade=CascadeType.ALL,fetch = FetchType.LAZY, mappedBy = "depart")
	public Set<Depart> getChildren() {
		return this.children;
	}

	public void setChildren(Set<Depart> departs) {
		this.children = departs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "depart")
	public Set<Position> getPositions() {
		return this.positions;
	}

	public void setPositions(Set<Position> positions) {
		this.positions = positions;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "UserDepart", joinColumns = { @JoinColumn(name = "departId") }, inverseJoinColumns = {
			@JoinColumn(name = "userId") })
	public Set<User> getUsers() {
		return users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@Transient
	public String getCheckArr() {
		return checkArr;
	}

	public void setCheckArr(String checkArr) {
		this.checkArr = "0";
	}
	
	@Override
	public String toString() {
		return "Depart [id=" + id + ", oname=" + oname + ", status=" + status + ", description=" + description
				+ ", children=" + children + "]";
	}

	
}
